"use client";

import { useState, useEffect } from "react";
import { useRouter } from "next/navigation";
import { Search, Trash2, Edit, CheckCircle2, BarChart2 } from "lucide-react";
import AdminNavigationBar from "@/app/components/AdminNavigationBar";

const statusMap = {
  Available: "‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô",
  Repair: "‡∏ã‡πà‡∏≠‡∏°",
  Damaged: "‡∏û‡∏±‡∏á",
};

export default function EquipmentListPage() {
  const router = useRouter();
  const [searchTerm, setSearchTerm] = useState("");
  const [equipmentList, setEquipmentList] = useState([]);
  const [loading, setLoading] = useState(true);
  const [repairFilter, setRepairFilter] = useState(false);

  useEffect(() => {
    const fetchEquipment = async () => {
      try {
        const res = await fetch("/api/view-equipment");
        const data = await res.json();
        if (data.success) setEquipmentList(data.data);
      } catch (error) {
        console.error(error);
      } finally {
        setLoading(false);
      }
    };
    fetchEquipment();
  }, []);

  const handleEdit = (id) => router.push(`/admin/view-equipment/edit-equipment?id=${id}`);

  const handleDelete = async (id) => {
    if (!confirm("‚ö†Ô∏è ‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ô‡∏µ‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?")) return;
    try {
      const res = await fetch(`/api/delete-equipment?id=${id}`, { method: "DELETE" });
      if (!res.ok) {
        const err = await res.json();
        return alert(err.message || "‚ö†Ô∏è ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î");
      }
      const data = await res.json();
      if (data.success) {
        alert("‚úÖ ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
        setEquipmentList((prev) => prev.filter((e) => e.id !== id));
      }
    } catch {
      alert("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ");
    }
  };

  const handleRepairDone = async (id) => {
    if (!confirm("‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏õ‡πá‡∏ô ‚ÄòAvailable‚Äô ‡πÉ‡∏ä‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?")) return;
    try {
      const res = await fetch("/api/update-equipment-status", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ id, status: "Available" }),
      });
      const data = await res.json();
      if (data.success) {
        setEquipmentList((prev) =>
          prev.map((item) =>
            item.id === id ? { ...item, status: "Available" } : item
          )
        );
        alert("‚úÖ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡πá‡∏ô Available ‡πÅ‡∏•‡πâ‡∏ß");
      } else {
        alert(data.message || "‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï");
      }
    } catch (error) {
      console.error(error);
      alert("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÑ‡∏î‡πâ");
    }
  };

  const filteredEquipment = equipmentList.filter((item) => {
    if (repairFilter) {
      return ["Repair", "Damaged"].includes(item.status);
    }
    return item.name.toLowerCase().includes(searchTerm.toLowerCase());
  });

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-100 to-gray-300 flex flex-col items-center p-6 pb-24">
      {/* Header */}
      <div className="w-full max-w-4xl bg-white p-4 shadow-lg flex items-center justify-between rounded-lg mb-6">
        <h2 className="text-lg font-semibold text-gray-800">üì¶ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå</h2>

        <div className="flex items-center space-x-2">
          <input
            type="text"
            placeholder="üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå..."
            value={searchTerm}
            onChange={(e) => setSearchTerm(e.target.value)}
            disabled={repairFilter}
            className={`w-48 border p-3 rounded-l border-gray-300 focus:ring-2 focus:ring-blue-500 focus:outline-none ${
              repairFilter ? "bg-gray-100" : ""
            }`}
          />
          <button
            onClick={() => setRepairFilter(false)}
            className="bg-blue-500 text-white px-4 py-2 rounded-l hover:bg-blue-600 transition disabled:opacity-50"
            disabled={repairFilter}
          >
            <Search size={20} />
          </button>
          <button
            onClick={() => setRepairFilter((f) => !f)}
            className={`px-4 py-2 rounded-r text-white transition ${
              repairFilter ? "bg-red-600 hover:bg-red-700" : "bg-yellow-500 hover:bg-yellow-600"
            }`}
          >
            ‡∏ã‡πà‡∏≠‡∏° &amp; ‡∏û‡∏±‡∏á
          </button>
    {/* ‡∏õ‡∏∏‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥ */}
    <button
      onClick={() => router.push("/admin/reports/monthly-usage")}
      className="flex items-center bg-gradient-to-r from-indigo-500 to-purple-500 hover:from-indigo-600 hover:to-purple-600 text-white px-4 py-2 rounded-lg shadow-lg transition ml-4"
    >
      <BarChart2 size={18} className="mr-2" />
      ‡∏™‡∏£‡∏∏‡∏õ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå
    </button>
        </div>
      </div>

      {/* Equipment List */}
      <div className="w-full max-w-4xl space-y-4">
        {loading ? (
          <p className="text-center text-gray-600">‚è≥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...</p>
        ) : filteredEquipment.length > 0 ? (
          filteredEquipment.map((equipment) => (
            <div
              key={equipment.id}
              className="bg-white p-6 shadow-lg rounded-lg flex justify-between items-center hover:shadow-2xl transition"
            >
              <div className="w-24 h-24 flex-shrink-0 border rounded-lg overflow-hidden shadow-md">
                <img
                  src={equipment.image || "/uploads/default.png"}
                  alt={equipment.name}
                  className="w-full h-full object-cover"
                />
              </div>
              <div className="flex-1 px-4">
                <p className="font-bold text-lg">üìå {equipment.name}</p>
                <p className="text-gray-800">üè∑Ô∏è ‡∏¢‡∏µ‡πà‡∏´‡πâ‡∏≠: {equipment.brand}</p>
                <p className="text-gray-800">üìÇ ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà: {equipment.category}</p>
                <p className="text-gray-800">üì¶ ‡∏£‡∏´‡∏±‡∏™‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå: {equipment.equipment_code}</p>
                <p className="text-gray-800">üìç ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡πá‡∏ö: {equipment.location}</p>
                <p className="text-gray-800">üìú ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î: {equipment.description}</p>
                {repairFilter && (
                  <p className="mt-2 text-red-600 font-semibold">
                    ‚ö†Ô∏è ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: {statusMap[equipment.status] || equipment.status}
                  </p>
                )}
              </div>
              <div className="flex space-x-2">
                {/* ‡∏õ‡∏∏‡πà‡∏°‡∏ã‡πà‡∏≠‡∏°‡πÄ‡∏™‡∏£‡πá‡∏à */}
                {equipment.status === "Repair" && (
                  <button
                    className="bg-green-500 text-white px-3 py-2 rounded-lg shadow-md hover:bg-green-600 transition flex items-center"
                    onClick={() => handleRepairDone(equipment.id)}
                  >
                    <CheckCircle2 size={18} className="mr-1" /> ‡∏ã‡πà‡∏≠‡∏°‡πÄ‡∏™‡∏£‡πá‡∏à
                  </button>
                )}
                <button
                  className="bg-red-500 text-white px-3 py-2 rounded-lg shadow-md hover:bg-red-600 transition flex items-center"
                  onClick={() => handleDelete(equipment.id)}
                >
                  <Trash2 size={18} className="mr-1" /> ‡∏•‡∏ö
                </button>
                <button
                  className="bg-yellow-500 text-white px-3 py-2 rounded-lg shadow-md hover:bg-yellow-600 transition flex items-center"
                  onClick={() => handleEdit(equipment.id)}
                >
                  <Edit size={18} className="mr-1" /> ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
                </button>
              </div>
            </div>
          ))
        ) : (
          <p className="text-center text-gray-600">‚è≥ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå</p>
        )}
      </div>

      <AdminNavigationBar />
    </div>
  );
}
