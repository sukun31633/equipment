"use client";

import { useState } from "react";
import { Search, ArrowLeft, AlertCircle } from "lucide-react";
import { useRouter } from "next/navigation";
import { motion } from "framer-motion";

const mockData = [
  { id: 1, userName: "‡∏™‡∏°‡∏ä‡∏≤‡∏¢ ‡πÉ‡∏à‡∏î‡∏µ", equipmentName: "‡∏Å‡∏•‡πâ‡∏≠‡∏á Webcam", brand: "Facecam", quantity: 2, returnDate: "2025-03-01", status: "‚ö†Ô∏è ‡πÄ‡∏Å‡∏¥‡∏ô‡∏Å‡∏≥‡∏´‡∏ô‡∏î", image: "/webcam.png" },
  { id: 2, userName: "‡πÄ‡∏°‡∏ò‡∏µ ‡∏à‡∏£‡∏¥‡∏á‡πÉ‡∏à", equipmentName: "‡∏Å‡∏•‡πâ‡∏≠‡∏á Webcam", brand: "Facecam", quantity: 1, returnDate: "2025-02-28", status: "‚ö†Ô∏è ‡πÄ‡∏Å‡∏¥‡∏ô‡∏Å‡∏≥‡∏´‡∏ô‡∏î", image: "/webcam.png" }
];

export default function OverduePage() {
  const [searchTerm, setSearchTerm] = useState("");
  const router = useRouter();

  const handleBack = () => {
    router.back();
  };

  const filteredData = mockData.filter((item) =>
    item.userName.toLowerCase().includes(searchTerm.toLowerCase())
  );

  return (
    <div className="p-6 min-h-screen bg-gradient-to-br from-red-400 to-red-200 flex flex-col items-center">
      
      {/* üîπ Header */}
      <div className="w-full max-w-3xl bg-white p-4 shadow-lg flex items-center justify-between rounded-lg mb-6">
        <div className="flex items-center">
          <button onClick={handleBack} className="text-red-500 mr-2">
            <ArrowLeft size={24} />
          </button>
          <h2 className="text-lg font-semibold text-gray-800">‚è≥ ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÄ‡∏•‡∏¢‡∏Å‡∏≥‡∏´‡∏ô‡∏î</h2>
        </div>
      </div>

      {/* üîπ ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ */}
      <div className="w-full max-w-3xl bg-white p-4 shadow-md rounded-lg mb-6 flex items-center">
        <input
          type="text"
          placeholder="üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ..."
          value={searchTerm}
          onChange={(e) => setSearchTerm(e.target.value)}
          className="w-full border p-3 rounded-l border-gray-300 focus:ring-2 focus:ring-red-500 focus:outline-none"
        />
        <button className="bg-red-500 text-white px-4 py-2 rounded-r hover:bg-red-600 transition">
          <Search size={20} />
        </button>
      </div>

      {/* üîπ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå */}
      <div className="w-full max-w-3xl space-y-4">
        {filteredData.length > 0 ? (
          filteredData.map((item) => (
            <motion.div
              key={item.id}
              whileHover={{ scale: 1.02 }}
              whileTap={{ scale: 0.98 }}
              className="bg-white p-6 shadow-lg rounded-lg flex justify-between items-center hover:shadow-2xl transition"
            >
              {/* ‡∏†‡∏≤‡∏û‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå */}
              <div className="w-24 h-24 flex-shrink-0 border rounded-lg overflow-hidden shadow-md">
                <img
                  src={item.image}
                  alt={item.equipmentName}
                  className="w-full h-full object-cover"
                />
              </div>

              {/* ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏° */}
              <div className="flex-1 px-4">
                <p className="font-bold text-lg">üìå {item.equipmentName}</p>
                <p className="text-gray-800">üë§ ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ: {item.userName}</p>
                <p className="text-gray-800">üè∑Ô∏è ‡∏¢‡∏µ‡πà‡∏´‡πâ‡∏≠: {item.brand}</p>
                <p className="text-gray-800">üì¶ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏¢‡∏∑‡∏°: {item.quantity} ‡∏ä‡∏¥‡πâ‡∏ô</p>
                <p className="text-gray-800">üìÖ ‡πÄ‡∏•‡∏¢‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡∏∑‡∏ô: {item.returnDate}</p>
                <p className="text-red-600 font-semibold flex items-center">
                  <AlertCircle size={18} className="mr-1" /> {item.status}
                </p>
              </div>

              {/* ‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏∑‡∏ô‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå */}
              <button 
                className="bg-yellow-500 text-white px-4 py-2 rounded-lg shadow-md hover:bg-yellow-600 transition"
                onClick={() => alert("‡∏Ñ‡∏∑‡∏ô‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")}
              >
                üîÑ ‡∏Ñ‡∏∑‡∏ô‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå
              </button>
            </motion.div>
          ))
        ) : (
          <p className="text-center text-gray-600">‚è≥ ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏°</p>
        )}
      </div>
    </div>
  );
}
