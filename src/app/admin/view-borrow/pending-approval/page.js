"use client";

import { useState } from "react";
import { Search, ArrowLeft, Clock } from "lucide-react";
import { useRouter } from "next/navigation";
import { motion } from "framer-motion";

const mockData = [
  { id: 1, image: "/webcam.png", userName: "‡πÑ‡∏°‡πÄ‡∏Ñ‡∏¥‡∏• ‡πÉ‡∏à‡∏î‡∏µ", equipmentName: "‡∏Å‡∏•‡πâ‡∏≠‡∏á‡πÄ‡∏ß‡πá‡∏ö‡πÅ‡∏Ñ‡∏°", brand: "Facecam", quantity: 1, returnDate: "2025-03-01", status: "üïí ‡∏£‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥" },
  { id: 2, image: "/webcam.png", userName: "‡∏™‡∏∏‡∏Å‡∏±‡∏•‡∏õ‡πå ‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏°", equipmentName: "‡∏Å‡∏•‡πâ‡∏≠‡∏á‡πÄ‡∏ß‡πá‡∏ö‡πÅ‡∏Ñ‡∏°", brand: "Facecam", quantity: 2, returnDate: "2025-03-05", status: "üïí ‡∏£‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥" }
];

export default function PendingApprovalPage() {
  const [searchTerm, setSearchTerm] = useState("");
  const router = useRouter();

  const handleBack = () => {
    router.back();
  };

  const filteredData = mockData.filter((item) =>
    item.userName.toLowerCase().includes(searchTerm.toLowerCase())
  );

  return (
    <div className="p-6 min-h-screen bg-gradient-to-br from-blue-200 to-indigo-600 flex flex-col items-center">
      
      {/* üîπ Header */}
      <div className="w-full max-w-3xl bg-white p-4 shadow-lg flex items-center justify-between rounded-lg mb-6">
        <div className="flex items-center">
          <button onClick={handleBack} className="text-blue-500 mr-2">
            <ArrowLeft size={24} />
          </button>
          <h2 className="text-lg font-semibold text-gray-800">üïí ‡∏£‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏°</h2>
        </div>
      </div>

      {/* üîπ ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ */}
      <div className="w-full max-w-3xl bg-white p-4 shadow-md rounded-lg mb-6 flex items-center">
        <input
          type="text"
          placeholder="üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ..."
          value={searchTerm}
          onChange={(e) => setSearchTerm(e.target.value)}
          className="w-full border p-3 rounded-l border-gray-300 focus:ring-2 focus:ring-blue-500 focus:outline-none"
        />
        <button className="bg-blue-500 text-white px-4 py-2 rounded-r hover:bg-blue-600 transition">
          <Search size={20} />
        </button>
      </div>

      {/* üîπ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥ */}
      <div className="w-full max-w-3xl space-y-4">
        {filteredData.length > 0 ? (
          filteredData.map((item) => (
            <motion.div
              key={item.id}
              whileHover={{ scale: 1.02 }}
              whileTap={{ scale: 0.98 }}
              className="bg-white p-6 shadow-lg rounded-lg flex justify-between items-center hover:shadow-2xl transition"
            >
              {/* ‡∏†‡∏≤‡∏û‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå */}
              <div className="w-24 h-24 flex-shrink-0 border rounded-lg overflow-hidden shadow-md">
                <img
                  src={item.image}
                  alt={item.equipmentName}
                  className="w-full h-full object-cover"
                />
              </div>

              {/* ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏° */}
              <div className="flex-1 px-4">
                <p className="font-bold text-lg">üìå {item.equipmentName}</p>
                <p className="text-gray-800">üë§ ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ: {item.userName}</p>
                <p className="text-gray-800">üè∑Ô∏è ‡∏¢‡∏µ‡πà‡∏´‡πâ‡∏≠: {item.brand}</p>
                <p className="text-gray-800">üì¶ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏¢‡∏∑‡∏°: {item.quantity} ‡∏ä‡∏¥‡πâ‡∏ô</p>
                <p className="text-gray-800">üìÖ ‡∏ß‡∏±‡∏ô‡∏Ñ‡∏∑‡∏ô‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå: {item.returnDate}</p>
                <p className="text-blue-600 font-semibold flex items-center">
                 {item.status}
                </p>
              </div>

              {/* ‡∏õ‡∏∏‡πà‡∏°‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥ */}
              <motion.button
                whileHover={{ scale: 1.05 }}
                whileTap={{ scale: 0.95 }}
                className="bg-green-500 text-white px-4 py-2 rounded-lg shadow-md hover:bg-green-600 transition"
                onClick={() => alert("‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")}
              >
                ‚úÖ ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥
              </motion.button>
            </motion.div>
          ))
        ) : (
          <p className="text-center text-gray-600">‚è≥ ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</p>
        )}
      </div>
    </div>
  );
}
