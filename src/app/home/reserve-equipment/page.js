"use client";

import { useState, useEffect } from "react";
import { useRouter, useSearchParams } from "next/navigation";
import { ArrowLeft } from "lucide-react";

export default function ReserveEquipmentPage() {
  const router = useRouter();
  const searchParams = useSearchParams();
  
  const [equipmentName, setEquipmentName] = useState("р╕Бр╕│р╕ер╕▒р╕Зр╣Вр╕лр╕ер╕Ф...");
  const equipmentID = searchParams.get("id");

  // тЬЕ р╣Ар╕Бр╣Зр╕Ър╕Др╣Ир╕▓р╕Яр╕нр╕гр╣Мр╕бр╣Гр╕Щ state
  const [startDate, setStartDate] = useState("");
  const [endDate, setEndDate] = useState("");
  const [reserveTime, setReserveTime] = useState("");
  const [courseCode, setCourseCode] = useState("");
  const [usageReason, setUsageReason] = useState("");
  const [file, setFile] = useState(null);
  const [error, setError] = useState(""); // р╣Ар╕Бр╣Зр╕Ър╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Ф

  useEffect(() => {
    if (equipmentID) {
      // ЁЯЫа р╕Фр╕╢р╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Кр╕╖р╣Ир╕нр╕нр╕╕р╕Ыр╕Бр╕гр╕Ур╣Мр╕Ир╕▓р╕Б API р╕Фр╣Йр╕зр╕в id
      const fetchEquipment = async () => {
        try {
          const res = await fetch(`/api/view-equipment?id=${equipmentID}`);
          const data = await res.json();
          if (data.success && data.data.length > 0) {
            setEquipmentName(data.data[0].name); // р╕Хр╕▒р╣Йр╕Зр╕Кр╕╖р╣Ир╕нр╕нр╕╕р╕Ыр╕Бр╕гр╕Ур╣М
          } else {
            setEquipmentName("р╣Др╕бр╣Ир╕Юр╕Ър╕Вр╣Йр╕нр╕бр╕╣р╕ер╕нр╕╕р╕Ыр╕Бр╕гр╕Ур╣М");
          }
        } catch (error) {
          console.error("р╣Ар╕Бр╕┤р╕Фр╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Фр╣Гр╕Щр╕Бр╕▓р╕гр╣Ар╕Кр╕╖р╣Ир╕нр╕бр╕Хр╣Ир╕н API", error);
        }
      };
      fetchEquipment();
    }
  }, [equipmentID]);

  const handleBack = () => {
    router.back();
  };

  // тЬЕ р╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щр╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕зр╕▒р╕Щр╕Чр╕╡р╣И
  const handleReserve = async () => {
    if (!startDate || !endDate || !reserveTime || !courseCode || !usageReason) {
      alert("тЪая╕П р╕Бр╕гр╕╕р╕Ур╕▓р╕Бр╕гр╕нр╕Бр╕Вр╣Йр╕нр╕бр╕╣р╕ер╣Гр╕лр╣Йр╕Др╕гр╕Ър╕Цр╣Йр╕зр╕Щ");
      return;
    }

    // р╕гр╕зр╕б startDate р╣Бр╕ер╕░ reserveTime р╣Ар╕Вр╣Йр╕▓р╕Фр╣Йр╕зр╕вр╕Бр╕▒р╕Щ
    const fullStartDate = `${startDate} ${reserveTime}`;

    // р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕зр╣Ир╕▓ endDate (р╕зр╕▒р╕Щр╕Чр╕╡р╣Ир╕Др╕╖р╕Щ) р╣Др╕бр╣Ир╣Ар╕Бр╣Ир╕▓р╕Бр╕зр╣Ир╕▓р╕лр╕гр╕╖р╕нр╕вр╣Йр╕нр╕Щр╕Бр╕ер╕▒р╕Ър╣Др╕Ыр╕Бр╣Ир╕нр╕Щ startDate (р╕зр╕▒р╕Щр╕Чр╕╡р╣Ир╕гр╕▒р╕Ъ)
    const startDateObj = new Date(fullStartDate);
    const endDateObj = new Date(endDate);

    if (endDateObj < startDateObj) {
      setError("тЭМ р╕зр╕▒р╕Щр╕Чр╕╡р╣Ир╕Др╕╖р╕Щр╣Др╕бр╣Ир╕кр╕▓р╕бр╕▓р╕гр╕Цр╕вр╣Йр╕нр╕Щр╕Бр╕ер╕▒р╕Ър╣Др╕Ыр╕Бр╣Ир╕нр╕Щр╕зр╕▒р╕Щр╕Чр╕╡р╣Ир╕гр╕▒р╕Ър╕нр╕╕р╕Ыр╕Бр╕гр╕Ур╣Мр╣Др╕Фр╣Й");
      return; // р╕Цр╣Йр╕▓р╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Фр╕Ир╕░р╕лр╕вр╕╕р╕Фр╕Бр╕▓р╕гр╕Чр╕│р╕Зр╕▓р╕Щ
    }

    setError(""); // р╕гр╕╡р╣Ар╕Лр╣Зр╕Хр╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Ф

    const formData = new FormData();
    formData.append("reserverName", "р╕Кр╕╖р╣Ир╕нр╕Ьр╕╣р╣Йр╕Ир╕нр╕З (р╕Фр╕╢р╕Зр╕Ир╕▓р╕Б session)");
    formData.append("userID", "userID (р╕Фр╕╢р╕Зр╕Ир╕▓р╕Б session)");
    formData.append("reservedEquipments", equipmentName);
    formData.append("startDate", fullStartDate); // р╣Гр╕Кр╣Й fullStartDate р╣Бр╕Чр╕Щ startDate р╣Ар╕Фр╕┤р╕б
    formData.append("endDate", endDate);
    formData.append("courseCode", courseCode);
    formData.append("usageReason", usageReason);
    if (file) formData.append("document", file);

    try {
      const res = await fetch("/api/reservation", {
        method: "POST",
        body: formData,
      });

      const data = await res.json();
      if (data.success) {
        alert("тЬЕ р╕Бр╕▓р╕гр╕Ир╕нр╕Зр╕кр╕│р╣Ар╕гр╣Зр╕И!");
        router.push("/home");
      } else {
        alert(data.message || "тЭМ р╣Др╕бр╣Ир╕кр╕▓р╕бр╕▓р╕гр╕Цр╕Чр╕│р╕Бр╕▓р╕гр╕Ир╕нр╕Зр╣Др╕Фр╣Й");
      }
    } catch (error) {
      console.error("р╣Ар╕Бр╕┤р╕Фр╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Ф:", error);
      alert("тЭМ р╣Ар╕Бр╕┤р╕Фр╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Ф р╕Бр╕гр╕╕р╕Ур╕▓р╕ер╕нр╕Зр╣Гр╕лр╕бр╣Ир╕нр╕╡р╕Бр╕Др╕гр╕▒р╣Йр╕З");
    }
  };

  return (
    <div className="p-8 pt-16 min-h-screen bg-gradient-to-br from-blue-500 to-blue-300 flex flex-col items-center w-full relative">
      <button
        onClick={handleBack}
        className="absolute top-6 left-6 md:top-8 md:left-8 flex items-center text-white bg-gray-900 px-4 py-2 rounded-lg shadow-md hover:bg-gray-800 transition"
      >
        <ArrowLeft className="mr-2" /> р╕вр╣Йр╕нр╕Щр╕Бр╕ер╕▒р╕Ъ
      </button>

      {/* тЬЕ р╣Бр╕кр╕Фр╕Зр╕Кр╕╖р╣Ир╕нр╕нр╕╕р╕Ыр╕Бр╕гр╕Ур╣М */}
      <h1 className="text-3xl font-bold text-white mb-4 text-center">ЁЯУЕ р╕Ир╕нр╕Зр╕нр╕╕р╕Ыр╕Бр╕гр╕Ур╣М</h1>
      <h2 className="text-lg font-semibold text-white mb-8 text-center">ЁЯЫа {equipmentName}</h2>

      <div className="bg-white p-8 shadow-xl rounded-xl w-full max-w-3xl">
        <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
          {/* ЁЯУЕ р╕зр╕▒р╕Щр╕Чр╕╡р╣Ир╕гр╕▒р╕Ър╕нр╕╕р╕Ыр╕Бр╕гр╕Ур╣М */}
          <div>
            <label className="block font-semibold mb-2 text-gray-700">ЁЯУЕ р╕зр╕▒р╕Щр╕Чр╕╡р╣Ир╕гр╕▒р╕Ър╕нр╕╕р╕Ыр╕Бр╕гр╕Ур╣М:</label>
            <input
              type="date"
              value={startDate}
              onChange={(e) => setStartDate(e.target.value)}
              className="w-full border p-3 rounded shadow-sm focus:ring-2 focus:ring-blue-500 focus:outline-none"
            />
          </div>

          {/* ЁЯУЕ р╕зр╕▒р╕Щр╕Чр╕╡р╣Ир╕Др╕╖р╕Щр╕нр╕╕р╕Ыр╕Бр╕гр╕Ур╣М */}
          <div>
            <label className="block font-semibold mb-2 text-gray-700">ЁЯУЕ р╕зр╕▒р╕Щр╕Чр╕╡р╣Ир╕Др╕╖р╕Щр╕нр╕╕р╕Ыр╕Бр╕гр╕Ур╣М:</label>
            <input
              type="date"
              value={endDate}
              onChange={(e) => setEndDate(e.target.value)}
              className="w-full border p-3 rounded shadow-sm focus:ring-2 focus:ring-blue-500 focus:outline-none"
            />
            {error && <p className="text-red-600 mt-2">{error}</p>}
          </div>

          {/* тП░ р╣Ар╕зр╕ер╕▓р╕гр╕▒р╕Ър╕нр╕╕р╕Ыр╕Бр╕гр╕Ур╣М */}
          <div>
            <label className="block font-semibold mb-2 text-gray-700">тП░ р╣Ар╕зр╕ер╕▓р╕гр╕▒р╕Ър╕нр╕╕р╕Ыр╕Бр╕гр╕Ур╣М:</label>
            <input
              type="time"
              value={reserveTime}
              onChange={(e) => setReserveTime(e.target.value)}
              className="w-full border p-3 rounded shadow-sm focus:ring-2 focus:ring-blue-500 focus:outline-none"
            />
          </div>

          {/* ЁЯУЪ р╕гр╕лр╕▒р╕кр╕зр╕┤р╕Кр╕▓р╕Чр╕╡р╣Ир╕вр╕╖р╕б */}
          <div>
            <label className="block font-semibold mb-2 text-gray-700">ЁЯУЪ р╕гр╕лр╕▒р╕кр╕зр╕┤р╕Кр╕▓р╕Чр╕╡р╣Ир╕вр╕╖р╕б:</label>
            <input
              type="text"
              value={courseCode}
              onChange={(e) => setCourseCode(e.target.value)}
              placeholder="р╕Бр╕гр╕нр╕Бр╕гр╕лр╕▒р╕кр╕зр╕┤р╕Кр╕▓ (р╣Ар╕Кр╣Ир╕Щ CS1012, IT2050)"
              className="w-full border p-3 rounded shadow-sm focus:ring-2 focus:ring-blue-500 focus:outline-none"
            />
          </div>

          {/* ЁЯУЭ р╕нр╕Шр╕┤р╕Ър╕▓р╕вр╕Бр╕▓р╕гр╣Гр╕Кр╣Йр╕Зр╕▓р╕Щ */}
          <div className="col-span-1 md:col-span-2">
            <label className="block font-semibold mb-2 text-gray-700">ЁЯУЭ р╕нр╕Шр╕┤р╕Ър╕▓р╕вр╕Бр╕▓р╕гр╣Гр╕Кр╣Йр╕Зр╕▓р╕Щ:</label>
            <textarea
              value={usageReason}
              onChange={(e) => setUsageReason(e.target.value)}
              placeholder="р╕Бр╕гр╕нр╕Бр╣Ар╕лр╕Хр╕╕р╕Ьр╕ер╣Бр╕ер╕░р╕гр╕▓р╕вр╕ер╕░р╣Ар╕нр╕╡р╕вр╕Фр╣Ар╕Бр╕╡р╣Ир╕вр╕зр╕Бр╕▒р╕Ър╕Бр╕▓р╕гр╣Гр╕Кр╣Йр╕нр╕╕р╕Ыр╕Бр╕гр╕Ур╣М..."
              rows="3"
              className="w-full border p-3 rounded shadow-sm focus:ring-2 focus:ring-blue-500 focus:outline-none resize-none"
            />
          </div>

          {/* ЁЯУД р╕нр╕▒р╕Ыр╣Вр╕лр╕ер╕Фр╣Ар╕нр╕Бр╕кр╕▓р╕гр╕Бр╕▓р╕гр╕нр╕Щр╕╕р╕Нр╕▓р╕Х */}
          <div className="col-span-1 md:col-span-2">
            <label className="block font-semibold mb-2 text-gray-700">ЁЯУД р╕нр╕▒р╕Ыр╣Вр╕лр╕ер╕Фр╣Ар╕нр╕Бр╕кр╕▓р╕гр╕Бр╕▓р╕гр╕нр╕Щр╕╕р╕Нр╕▓р╕Х (р╣Гр╕Щр╕Бр╕гр╕Ур╕╡р╕вр╕╖р╕бр╕бр╕▓р╕Бр╕Бр╕зр╣Ир╕▓ 7 р╕зр╕▒р╕Щ)</label>
            <input
              type="file"
              onChange={(e) => setFile(e.target.files[0])}
              className="w-full border p-3 rounded shadow-sm focus:ring-2 focus:ring-blue-500 focus:outline-none"
            />
          </div>
        </div>

        {/* ЁЯТ╛ р╕Ыр╕╕р╣Ир╕бр╕Ър╕▒р╕Щр╕Чр╕╢р╕Б */}
        <button
          onClick={handleReserve} // тЬЕ р╣Ар╕Юр╕┤р╣Ир╕бр╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щр╕Ър╕▒р╕Щр╕Чр╕╢р╕Б
          className="bg-gradient-to-r from-blue-500 to-indigo-500 text-white py-3 px-6 rounded-lg w-full text-lg font-semibold shadow-md hover:shadow-lg hover:from-blue-600 hover:to-indigo-600 transition mt-6"
        >
          ЁЯТ╛ р╕Ър╕▒р╕Щр╕Чр╕╢р╕Б
        </button>
      </div>
    </div>
  );
}
